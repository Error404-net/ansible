---
 -name: Playbook-atak-single-server
  Hosts: comms

script
------
- hosts: all
  tasks:
    - name: Increase system limit for number of concurrent TCP connections - End of config
      lineinfile:
        path: /Users/mdtutorials2/Documents/Ansible/line.txt
        line: *               soft    nofile          32768
        line: *               hard    nofile          32768
         
- name: Install epel
  ansible.builtin.dnf:
    name: epel-release
    state: present

- hosts: all
  become: yes

  vars_files:
    - vars.yml

  pre_tasks:
    - name: "Install packages"
      dnf: "name={{ item }} state=present"
      with_items:
        - postgresql
        - postgresql-server

    - name: "Install Python packages"
      pip: "name={{ item }}  state=present"
      with_items:
        - psycopg2-binary

  tasks:
    - name: "Find out if PostgreSQL is initialized"
      ansible.builtin.stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: "Initialize PostgreSQL"
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists
 
    - name: "Start and enable services"
      service: "name={{ item }} state=started enabled=yes"
      with_items:
        - postgresql

    - name: "Create app database"
      postgresql_db:
        state: present
        name: "{{ db_name }}"
      become: yes
      become_user: postgres

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "{{ db_user }}"
        password: "{{ db_password }}"
      become: yes
      become_user: postgres

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "{{ db_name }}"
        roles: "{{ db_user }}"
        grant_option: no
        privs: all
      become: yes
      become_user: postgres

    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        dest: "~/data/pg_hba.conf"
        contype: host
        databases: all
        method: md5
        users: "{{ db_user }}"
        create: true
      become: yes
      become_user: postgres
      notify: restart postgres
 
    - name: "Load SQL script into a variable"
      set_fact:
        migration_sql: "{{ lookup('file', 'conf/migration.sql') }}"

    - name: "Execute script from variable"
      command: "psql {{ db_name }} -c {{ migration_sql }}"
      become_user: postgres
      register: sql_response_variable

  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted

- name: Install one specific version of Java-11
  ansible.builtin.yum:
    name: httpd-2.2.29-1.4.amzn1
    state: present

- name: Install powertools
  ansible.builtin.dnf:
    name: powertools
    state: latest

- name: Install the latest version of postgis30_10
  ansible.builtin.dnf:
    name: postgis30_10
    state: present


- name: If follow=no, /path/to/link will become a file and be overwritten by contents of foo.conf
  ansible.builtin.copy:
    src: /atak.zip
    dest: /home/  # link to /path/to/file
    follow: no


- name: Install ATAK from local file that was transfered over
  ansible.builtin.yum:
    name: /usr/local/src/nginx-release-centos-6-0.el6.ngx.noarch.rpm
    state: present